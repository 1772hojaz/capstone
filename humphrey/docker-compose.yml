version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: spacs_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-spacs_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-spacs_secure_password_2025}
      POSTGRES_DB: ${POSTGRES_DB:-spacs_africa}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spacs_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spacs_user -d spacs_africa"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: spacs_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - spacs_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spacs_backend
    environment:
      DATABASE_URL: postgresql://spacs_user:spacs_secure_password_2025@postgres:5432/spacs_africa
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      SECRET_KEY: ${SECRET_KEY:-super-secret-jwt-key-change-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ml_models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spacs_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for Background Tasks
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spacs_celery
    environment:
      DATABASE_URL: postgresql://spacs_user:spacs_secure_password_2025@postgres:5432/spacs_africa
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      ENVIRONMENT: development
    volumes:
      - ./backend:/app
      - ml_models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spacs_network
    command: celery -A celery_worker.celery worker --loglevel=info

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spacs_celery_beat
    environment:
      DATABASE_URL: postgresql://spacs_user:spacs_secure_password_2025@postgres:5432/spacs_africa
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      ENVIRONMENT: development
    volumes:
      - ./backend:/app
      - ml_models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spacs_network
    command: celery -A celery_worker.celery beat --loglevel=info

networks:
  spacs_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ml_models:
    driver: local
